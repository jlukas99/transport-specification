import 'package:google_mlkit_text_recognition/google_mlkit_text_recognition.dart';
import 'package:image_picker/image_picker.dart';
import '../models/transport_spec.dart';
import 'openai_service.dart';

class DocumentScannerService {
  final textRecognizer = TextRecognizer();
  final imagePicker = ImagePicker();
  final OpenAIService openAIService;

  DocumentScannerService({required this.openAIService});

  Future<TransportSpec?> scanDocument() async {
    try {
      final XFile? image =
          await imagePicker.pickImage(source: ImageSource.camera);
      if (image == null) return null;

      final inputImage = InputImage.fromFilePath(image.path);
      final recognizedText = await textRecognizer.processImage(inputImage);

      // Parse the recognized text to extract transport specification details
      final extractedData = await _parseRecognizedText(recognizedText.text);
      if (extractedData != null) {
        return TransportSpec(
          id: '', // Will be generated by Supabase
          specNumber: extractedData['specNumber'],
          loadingDate: DateTime.parse(extractedData['loadingDate']),
          loadingLocation: extractedData['loadingLocation'],
          unloadingDate: DateTime.parse(extractedData['unloadingDate']),
          unloadingLocation: extractedData['unloadingLocation'],
          rate: double.parse(extractedData['rate']
              .toString()
              .replaceAll(' z≈Ç', '')
              .replaceAll(',', '.')),
          createdAt: DateTime.now(),
          updatedAt: DateTime.now(),
          userId: '', // Will be set by Supabase service
        );
      }
      return null;
    } catch (e) {
      print('Error scanning document: $e');
      return null;
    }
  }

  Future<Map<String, dynamic>?> _parseRecognizedText(String text) async {
    return await openAIService.extractTransportData(text);
  }

  void dispose() {
    textRecognizer.close();
  }
}
